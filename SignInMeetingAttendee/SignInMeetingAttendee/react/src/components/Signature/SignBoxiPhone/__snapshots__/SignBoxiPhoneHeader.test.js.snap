// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signature Box Header for iPhone SignHeader Component with meal option checkbox for iPhone should render properly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "flex-end",
      "marginTop": 15,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
          "textAlign": "left",
          "writingDirection": "ltr",
        },
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "System",
            "fontWeight": "400",
            "textAlign": "left",
            "writingDirection": "ltr",
          },
          Array [
            Object {
              "fontSize": 14,
              "letterSpacing": 0.25,
              "lineHeight": 20,
              "marginVertical": 2,
            },
            Object {
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ],
          Array [
            Object {
              "fontSize": 14,
              "letterSpacing": 0.25,
              "lineHeight": 20,
              "marginVertical": 2,
            },
            Object {
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ],
        ],
      ]
    }
  >
    Meal?
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLiveRegion="polite"
      accessibilityRole="button"
      accessibilityStates={Array []}
      accessibilityTraits="button"
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
      style={Object {}}
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "borderRadius": 18,
                "paddingHorizontal": 6,
              },
              Object {
                "height": 34,
                "paddingVertical": 4,
                "width": 34,
              },
            ],
          ]
        }
      >
        <View
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            style={
              Array [
                Object {
                  "color": "#0768FD",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "transform": Array [
                      Object {
                        "scaleX": 1,
                      },
                    ],
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            ï„²
          </Text>
          <View
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "#0768FD",
                  "borderWidth": 0,
                  "height": 15,
                  "width": 15,
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "borderRadius": 0,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`Signature Box Header for iPhone SignHeader Component with picklist selectbox for iPhone should render properly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "flex-end",
      "marginTop": 15,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
          "textAlign": "left",
          "writingDirection": "ltr",
        },
        Array [
          Object {
            "color": "rgba(0, 0, 0, 0.87)",
            "fontFamily": "System",
            "fontWeight": "400",
            "textAlign": "left",
            "writingDirection": "ltr",
          },
          Array [
            Object {
              "fontSize": 14,
              "letterSpacing": 0.25,
              "lineHeight": 20,
              "marginVertical": 2,
            },
            Object {
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ],
          Array [
            Object {
              "fontSize": 14,
              "letterSpacing": 0.25,
              "lineHeight": 20,
              "marginVertical": 2,
            },
            Object {
              "fontSize": 16,
              "fontWeight": "bold",
            },
          ],
        ],
      ]
    }
  >
    Meal?
  </Text>
  <View>
    <View
      style={
        Array [
          Object {
            "width": 160,
          },
          Object {
            "borderColor": "#C0C0C0",
            "borderWidth": 1,
            "marginLeft": 10,
          },
        ]
      }
    >
      <View>
        <View
          collapsable={false}
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "backgroundColor": undefined,
                  "borderColor": "#d9d9d9",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "elevation": 0,
                  "height": 40,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "paddingLeft": 8,
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 14,
                    "left": 14,
                    "right": 14,
                    "top": 14,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#000000",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "400",
                      },
                    ]
                  }
                >
                  Dinner
                </Text>
              </View>
            </View>
            <View
              accessibilityComponentType="button"
              accessibilityRole="button"
              accessibilityStates={Array []}
              accessibilityTraits="button"
              accessible={true}
              centered={true}
              focusable={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 6,
                  "right": 6,
                  "top": 6,
                }
              }
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
              style={Object {}}
            >
              <View
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "margin": 6,
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 18,
                        "height": 36,
                        "width": 36,
                      },
                      undefined,
                      Object {
                        "margin": 0,
                      },
                    ],
                  ]
                }
              >
                <View>
                  <Text
                    accessibilityElementsHidden={true}
                    allowFontScaling={false}
                    importantForAccessibility="no-hide-descendants"
                    pointerEvents="none"
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontSize": 24,
                        },
                        Array [
                          Object {
                            "transform": Array [
                              Object {
                                "scaleX": 1,
                              },
                            ],
                          },
                          Object {
                            "backgroundColor": "transparent",
                          },
                        ],
                        Object {
                          "fontFamily": "Material Design Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    ï…€
                  </Text>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 0,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
