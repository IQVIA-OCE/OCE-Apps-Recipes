// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render properly 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      forwardedRef={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      style={
        Object {
          "backgroundColor": "#eee",
          "flex": 1,
          "flexDirection": "column-reverse",
          "overflow": "hidden",
        }
      }
    >
      <RNSScreenContainer
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          nativeID="animatedComponent"
          onComponentRef={[Function]}
          pointerEvents="auto"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "paddingTop": 64,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "minHeight": "100%",
                }
              }
            >
              <RCTScrollView
                ListFooterComponent={[Function]}
                data={Array []}
                extraData={
                  Object {
                    "dataSource": Array [],
                    "error": "",
                    "fetchDone": false,
                    "loading": true,
                    "queryLocator": "",
                  }
                }
                getItem={[Function]}
                getItemCount={[Function]}
                keyExtractor={[Function]}
                onContentSizeChange={[Function]}
                onEndReached={[Function]}
                onEndReachedThreshold={0.5}
                onLayout={[Function]}
                onMomentumScrollBegin={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Array [
                    Object {
                      "paddingTop": 5,
                    },
                    Object {
                      "backgroundColor": "#f2f2f2",
                    },
                  ]
                }
                viewabilityConfigCallbackPairs={Array []}
              >
                <View>
                  <View
                    onLayout={[Function]}
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "justifyContent": "center",
                          },
                          Object {
                            "minHeight": 80,
                            "paddingVertical": 10,
                          },
                        ]
                      }
                    >
                      <View
                        collapsable={false}
                        nativeID="animatedComponent"
                        style={
                          Object {
                            "height": 24,
                            "opacity": 1,
                            "width": 24,
                          }
                        }
                      >
                        <View
                          collapsable={false}
                          nativeID="animatedComponent"
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "height": 24,
                                "transform": Array [
                                  Object {
                                    "rotate": "45deg",
                                  },
                                ],
                                "width": 24,
                              }
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                Object {
                                  "height": 12,
                                  "overflow": "hidden",
                                  "width": 24,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "height": 24,
                                    "transform": Array [
                                      Object {
                                        "translateY": 0,
                                      },
                                      Object {
                                        "rotate": "-165deg",
                                      },
                                    ],
                                    "width": 24,
                                  }
                                }
                              >
                                <View
                                  collapsable={false}
                                  style={
                                    Object {
                                      "height": 12,
                                      "overflow": "hidden",
                                      "width": 24,
                                    }
                                  }
                                >
                                  <View
                                    collapsable={false}
                                    nativeID="animatedComponent"
                                    style={
                                      Object {
                                        "borderColor": "#0768FD",
                                        "borderRadius": 12,
                                        "borderWidth": 2.4,
                                        "height": 24,
                                        "width": 24,
                                      }
                                    }
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                        <View
                          collapsable={false}
                          nativeID="animatedComponent"
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "height": 24,
                                "transform": Array [
                                  Object {
                                    "rotate": "45deg",
                                  },
                                ],
                                "width": 24,
                              }
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                Object {
                                  "height": 12,
                                  "overflow": "hidden",
                                  "top": 12,
                                  "width": 24,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "height": 24,
                                    "transform": Array [
                                      Object {
                                        "translateY": -12,
                                      },
                                      Object {
                                        "rotate": "345deg",
                                      },
                                    ],
                                    "width": 24,
                                  }
                                }
                              >
                                <View
                                  collapsable={false}
                                  style={
                                    Object {
                                      "height": 12,
                                      "overflow": "hidden",
                                      "width": 24,
                                    }
                                  }
                                >
                                  <View
                                    collapsable={false}
                                    nativeID="animatedComponent"
                                    style={
                                      Object {
                                        "borderColor": "#0768FD",
                                        "borderRadius": 12,
                                        "borderWidth": 2.4,
                                        "height": 24,
                                        "width": 24,
                                      }
                                    }
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          backTitleVisible={true}
          cardOverlayEnabled={false}
          cardShadowEnabled={true}
          collapsable={false}
          index={0}
          isLandscape={false}
          layout={
            Object {
              "height": 0,
              "initHeight": 0,
              "initWidth": 0,
              "isMeasured": false,
              "width": 0,
            }
          }
          layoutPreset="center"
          mode="float"
          nativeID="animatedComponent"
          navigation={
            Object {
              "actions": Object {
                "dismiss": [Function],
                "goBack": [Function],
                "navigate": [Function],
                "pop": [Function],
                "popToTop": [Function],
                "push": [Function],
                "replace": [Function],
                "reset": [Function],
                "setParams": [Function],
              },
              "addListener": [Function],
              "dangerouslyGetParent": [Function],
              "dismiss": [Function],
              "dispatch": [Function],
              "emit": [Function],
              "getChildNavigation": [Function],
              "getParam": [Function],
              "getScreenProps": [Function],
              "goBack": [Function],
              "isFirstRouteInParent": [Function],
              "isFocused": [Function],
              "navigate": [Function],
              "pop": [Function],
              "popToTop": [Function],
              "push": [Function],
              "replace": [Function],
              "reset": [Function],
              "router": undefined,
              "setParams": [Function],
              "state": Object {
                "key": "id-0",
                "routeName": "AccountsList",
              },
            }
          }
          navigationOptions={
            Object {
              "title": "Accounts",
            }
          }
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          position={0}
          scene={
            Object {
              "descriptor": Object {
                "getComponent": [Function],
                "key": "id-0",
                "navigation": Object {
                  "actions": Object {
                    "dismiss": [Function],
                    "goBack": [Function],
                    "navigate": [Function],
                    "pop": [Function],
                    "popToTop": [Function],
                    "push": [Function],
                    "replace": [Function],
                    "reset": [Function],
                    "setParams": [Function],
                  },
                  "addListener": [Function],
                  "dangerouslyGetParent": [Function],
                  "dismiss": [Function],
                  "dispatch": [Function],
                  "emit": [Function],
                  "getChildNavigation": [Function],
                  "getParam": [Function],
                  "getScreenProps": [Function],
                  "goBack": [Function],
                  "isFirstRouteInParent": [Function],
                  "isFocused": [Function],
                  "navigate": [Function],
                  "pop": [Function],
                  "popToTop": [Function],
                  "push": [Function],
                  "replace": [Function],
                  "reset": [Function],
                  "router": undefined,
                  "setParams": [Function],
                  "state": Object {
                    "key": "id-0",
                    "routeName": "AccountsList",
                  },
                },
                "options": Object {
                  "header": [Function],
                  "headerStyle": Object {
                    "backgroundColor": "transparent",
                  },
                  "title": "Accounts",
                },
                "state": Object {
                  "key": "id-0",
                  "routeName": "AccountsList",
                },
              },
              "index": 0,
              "isActive": true,
              "isStale": false,
              "key": "scene_id-0",
              "route": Object {
                "key": "id-0",
                "routeName": "AccountsList",
              },
            }
          }
          scenes={
            Array [
              Object {
                "descriptor": Object {
                  "getComponent": [Function],
                  "key": "id-0",
                  "navigation": Object {
                    "actions": Object {
                      "dismiss": [Function],
                      "goBack": [Function],
                      "navigate": [Function],
                      "pop": [Function],
                      "popToTop": [Function],
                      "push": [Function],
                      "replace": [Function],
                      "reset": [Function],
                      "setParams": [Function],
                    },
                    "addListener": [Function],
                    "dangerouslyGetParent": [Function],
                    "dismiss": [Function],
                    "dispatch": [Function],
                    "emit": [Function],
                    "getChildNavigation": [Function],
                    "getParam": [Function],
                    "getScreenProps": [Function],
                    "goBack": [Function],
                    "isFirstRouteInParent": [Function],
                    "isFocused": [Function],
                    "navigate": [Function],
                    "pop": [Function],
                    "popToTop": [Function],
                    "push": [Function],
                    "replace": [Function],
                    "reset": [Function],
                    "router": undefined,
                    "setParams": [Function],
                    "state": Object {
                      "key": "id-0",
                      "routeName": "AccountsList",
                    },
                  },
                  "options": Object {
                    "header": [Function],
                    "headerStyle": Object {
                      "backgroundColor": "transparent",
                    },
                    "title": "Accounts",
                  },
                  "state": Object {
                    "key": "id-0",
                    "routeName": "AccountsList",
                  },
                },
                "index": 0,
                "isActive": true,
                "isStale": false,
                "key": "scene_id-0",
                "route": Object {
                  "key": "id-0",
                  "routeName": "AccountsList",
                },
              },
            ]
          }
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#0768FD",
              "elevation": 4,
              "flexDirection": "row",
              "height": 56,
              "paddingHorizontal": 4,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 3,
                "width": 0,
              },
              "shadowOpacity": 0.24,
              "shadowRadius": 4,
            }
          }
          transitionPreset="fade-in-place"
        >
          <View
            style={
              Object {
                "width": 48,
              }
            }
          />
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                  "paddingHorizontal": 12,
                },
                Array [
                  false,
                  Object {
                    "alignItems": "center",
                  },
                  undefined,
                ],
              ]
            }
          >
            <Text
              accessibilityRole="header"
              accessibilityTraits="header"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                    "writingDirection": "ltr",
                  },
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "System",
                      "fontWeight": "400",
                    },
                    Object {
                      "fontSize": 17,
                    },
                    undefined,
                  ],
                ]
              }
            >
              Accounts
            </Text>
          </View>
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            centered={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "margin": 6,
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 18,
                      "height": 36,
                      "width": 36,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "transform": Array [
                          Object {
                            "rotate": "0deg",
                          },
                        ],
                      }
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      style={
                        Array [
                          Object {
                            "color": "#ffffff",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
