// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OneKeyValidationRequest Should render OneKeyValidationRequest component 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest Should render OneKeyValidationRequest component with initial data 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call fetchCountriesLabels 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call fetchCountriesLabels with no data 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call fetchCountriesLabels with wrong data 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call fetchWorkplaces 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getPicklistValues 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getPicklistValues with error 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getRequiredFields 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getRequiredFields with empty data 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getRequiredFields with error 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getValidationSchema 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getValidationSchema with entityType 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getWorkplaceCategories 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getWorkplaceCategories 2`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getWorkplaces 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getWorkplaces with data 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call getWorkplaces with error 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call handleCountryClose 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call handleCountryClose with error 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call handleCountryClose with no entityType 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching picklists...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call handleEntityTypeClose 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "marginBottom": 8,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "marginRight": 3,
                      }
                    }
                  >
                    Country
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": undefined,
                      }
                    }
                  >
                    *
                  </Text>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                    testID="ios_touchable_wrapper"
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={false}
                      rejectResponderTermination={true}
                      style={
                        Array [
                          Object {
                            "borderColor": "#bdbdbd",
                            "borderRadius": 4,
                            "borderWidth": 1,
                            "color": "black",
                            "fontSize": 16,
                            "padding": 11,
                            "paddingRight": 30,
                            "width": "100%",
                          },
                          Object {
                            "color": "#C7C7CD",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="Choose a Country"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "position": "absolute",
                            "right": 0,
                          },
                          Object {
                            "right": 12,
                            "top": 10,
                          },
                        ]
                      }
                      testID="icon_container"
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "black",
                              "fontSize": 24,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        ï…€
                      </Text>
                    </View>
                  </View>
                  <Modal
                    hardwareAccelerated={false}
                    onDismiss={[Function]}
                    onOrientationChange={[Function]}
                    supportedOrientations={
                      Array [
                        "portrait",
                        "landscape",
                      ]
                    }
                    testID="ios_modal"
                    transparent={true}
                    visible={false}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                      testID="ios_modal_top"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#EFF1F2",
                            "borderTopColor": "#919498",
                            "borderTopWidth": 0.5,
                            "flexDirection": "row",
                            "height": 44,
                            "justifyContent": "space-between",
                            "paddingHorizontal": 10,
                            "zIndex": 2,
                          },
                          undefined,
                        ]
                      }
                      testID="input_accessory_view"
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 11,
                                  "transform": Array [
                                    Object {
                                      "translateY": 4,
                                    },
                                    Object {
                                      "rotate": "-45deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 22,
                                  "transform": Array [
                                    Object {
                                      "translateY": -5,
                                    },
                                    Object {
                                      "rotate": "135deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 4,
                            "left": 4,
                            "right": 4,
                            "top": 4,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        testID="done_button"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#007AFE",
                                "fontSize": 15,
                                "fontWeight": "bold",
                                "paddingRight": 2,
                                "paddingTop": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          Done
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#D0D4DB",
                            "justifyContent": "center",
                          },
                          Object {
                            "height": 215,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View>
                        <RCTPicker
                          items={
                            Array [
                              Object {
                                "label": "Choose a Country",
                                "textColor": undefined,
                                "value": "",
                              },
                            ]
                          }
                          onChange={[Function]}
                          selectedIndex={0}
                          style={
                            Array [
                              Object {
                                "height": 216,
                              },
                              undefined,
                            ]
                          }
                          testID="ios_picker"
                        />
                      </View>
                    </View>
                  </Modal>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#f4f6f9",
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#7c7f81",
              }
            }
          >
            Individual/Activity
          </Text>
        </View>
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
                "zIndex": 100,
              }
            }
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  First Name
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="individual.firstName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Middle Name
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="individual.middleName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Last Name
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="individual.lastName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Courtesy Title
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Individual Title
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Gender
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Professional Type
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Role
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Primary Specialty
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Specialty 2
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Specialty 3
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#f4f6f9",
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#7c7f81",
              }
            }
          >
            Workplace
          </Text>
        </View>
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Name
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="workplace.usualName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Organization Name
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="workplace.parentUsualName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value=""
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Telephone No
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="workplace.telephone"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="0000000000"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Workplace Type
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": "",
                            },
                            Object {
                              "label": "",
                              "textColor": undefined,
                              "value": "",
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={1}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Category
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": "",
                            },
                            Object {
                              "label": "",
                              "textColor": undefined,
                              "value": "",
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={1}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Address Line 1
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="address.longLabel"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  City
                  <Text
                    style={
                      Object {
                        "color": "#E20000",
                      }
                    }
                  >
                     *
                  </Text>
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="address.city"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Postal Code
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="address.longPostalCode"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  County
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="address.countyCode"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value=""
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#f4f6f9",
                "marginBottom": 10,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#7c7f81",
                }
              }
            >
              Other
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "width": "100%",
                  },
                  undefined,
                  Object {
                    "opacity": 1,
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Request Comments
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "borderColor": "#D9D9D9",
                      "borderRadius": 4,
                      "borderWidth": 1,
                    },
                    Object {},
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 80,
                      "minHeight": 80,
                      "overflow": "hidden",
                      "paddingBottom": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={true}
                    maxResizableWidth={750}
                    minHeight={60}
                    minWidth={0}
                    multiline={true}
                    name="workplace.requestComments"
                    numberOfLines={3}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    paddingLeft={8}
                    paddingRight={8}
                    placeholderTextColor="rgba(0, 0, 0, 0.54)"
                    rejectResponderTermination={true}
                    selectionColor="#0768FD"
                    style={
                      Array [
                        Object {
                          "margin": 0,
                          "textAlign": "left",
                          "zIndex": 5,
                        },
                        Object {
                          "color": "#000000",
                          "fontFamily": "System",
                          "fontSize": 16,
                          "fontWeight": undefined,
                          "height": 80,
                          "minHeight": 0,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingVertical": 5,
                          "textAlignVertical": "center",
                          "width": "100%",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value=""
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "margin": 25,
            }
          }
        >
          <View
            buttonColor="#039BE5"
            buttonType="outline"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 4,
                "borderStyle": "solid",
                "elevation": 0,
                "minWidth": 64,
                "opacity": 0.5,
                "width": "auto",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityRole="button"
              accessibilityStates={
                Array [
                  "disabled",
                ]
              }
              accessibilityTraits={
                Array [
                  "button",
                  "disabled",
                ]
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onLayout={[Function]}
              onPressIn={[Function]}
              onPressOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
              style={Object {}}
            >
              <View
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "borderRadius": 4,
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontFamily": "System",
                          "fontWeight": "400",
                          "textAlign": "left",
                          "writingDirection": "ltr",
                        },
                        Array [
                          Object {
                            "letterSpacing": 1,
                            "textAlign": "center",
                          },
                          undefined,
                          false,
                          Object {
                            "color": "#0768FD",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "marginHorizontal": 16,
                            "marginVertical": 9,
                          },
                          Object {
                            "fontFamily": "System",
                            "fontWeight": "500",
                          },
                          undefined,
                        ],
                      ]
                    }
                  >
                    Submit
                  </Text>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 0,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call handleEntityTypeClose with no entityType 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call handleSubmit 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call handleSubmit as component method 1`] = `
Array [
  <View
    style={
      Object {
        "backgroundColor": "#00C221",
        "elevation": 1,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 0.5,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 0.75,
        "zIndex": 99,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "overflow": "hidden",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
      <View
        onLayout={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "position": "absolute",
              "right": 5,
              "top": 4,
            }
          }
        >
          <View
            accessibilityComponentType="button"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessibilityTraits="button"
            accessible={true}
            centered={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "margin": 6,
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 15,
                      "height": 30,
                      "width": 30,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              <View>
                <Text
                  accessibilityElementsHidden={true}
                  allowFontScaling={false}
                  importantForAccessibility="no-hide-descendants"
                  pointerEvents="none"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontSize": 20,
                      },
                      Array [
                        Object {
                          "transform": Array [
                            Object {
                              "scaleX": 1,
                            },
                          ],
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                      ],
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  ï…–
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 0,
              "marginLeft": 16,
              "marginRight": 56,
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "margin": 8,
              }
            }
          >
            <Text
              accessibilityElementsHidden={true}
              allowFontScaling={false}
              importantForAccessibility="no-hide-descendants"
              pointerEvents="none"
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontSize": 20,
                  },
                  Array [
                    Object {
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ],
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              ï„³
            </Text>
          </View>
          <View
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                    "writingDirection": "ltr",
                  },
                  Array [
                    Object {
                      "flex": 1,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "margin": 8,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ],
                ]
              }
            >
              Validation request submitted
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "margin": 4,
            }
          }
        />
      </View>
    </View>
  </View>,
  <RCTScrollView>
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          style={
            Object {
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "marginBottom": 10,
                "padding": 10,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 15,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "flexDirection": "row",
                      "marginBottom": 8,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "marginRight": 3,
                      }
                    }
                  >
                    Record Type
                  </Text>
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                    testID="ios_touchable_wrapper"
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={false}
                      rejectResponderTermination={true}
                      style={
                        Array [
                          Object {
                            "borderColor": "#bdbdbd",
                            "borderRadius": 4,
                            "borderWidth": 1,
                            "color": "black",
                            "fontSize": 16,
                            "padding": 11,
                            "paddingRight": 30,
                            "width": "100%",
                          },
                          Object {
                            "color": "#C7C7CD",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="Choose a Record Type"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "position": "absolute",
                            "right": 0,
                          },
                          Object {
                            "right": 12,
                            "top": 10,
                          },
                        ]
                      }
                      testID="icon_container"
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "black",
                              "fontSize": 24,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        ï…€
                      </Text>
                    </View>
                  </View>
                  <Modal
                    hardwareAccelerated={false}
                    onDismiss={[Function]}
                    onOrientationChange={[Function]}
                    supportedOrientations={
                      Array [
                        "portrait",
                        "landscape",
                      ]
                    }
                    testID="ios_modal"
                    transparent={true}
                    visible={false}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                      testID="ios_modal_top"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#EFF1F2",
                            "borderTopColor": "#919498",
                            "borderTopWidth": 0.5,
                            "flexDirection": "row",
                            "height": 44,
                            "justifyContent": "space-between",
                            "paddingHorizontal": 10,
                            "zIndex": 2,
                          },
                          undefined,
                        ]
                      }
                      testID="input_accessory_view"
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 11,
                                  "transform": Array [
                                    Object {
                                      "translateY": 4,
                                    },
                                    Object {
                                      "rotate": "-45deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 22,
                                  "transform": Array [
                                    Object {
                                      "translateY": -5,
                                    },
                                    Object {
                                      "rotate": "135deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 4,
                            "left": 4,
                            "right": 4,
                            "top": 4,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        testID="done_button"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#007AFE",
                                "fontSize": 15,
                                "fontWeight": "bold",
                                "paddingRight": 2,
                                "paddingTop": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          Done
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#D0D4DB",
                            "justifyContent": "center",
                          },
                          Object {
                            "height": 215,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View>
                        <RCTPicker
                          items={
                            Array [
                              Object {
                                "label": "Choose a Record Type",
                                "textColor": undefined,
                                "value": null,
                              },
                            ]
                          }
                          onChange={[Function]}
                          selectedIndex={0}
                          style={
                            Array [
                              Object {
                                "height": 216,
                              },
                              undefined,
                            ]
                          }
                          testID="ios_picker"
                        />
                      </View>
                    </View>
                  </Modal>
                </View>
              </View>
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              />
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>,
]
`;

exports[`OneKeyValidationRequest should call handleSubmit as component method with error 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Submitting request...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`OneKeyValidationRequest should call handleSubmit as component method with no entityType 1`] = `
Array [
  <View
    style={
      Object {
        "backgroundColor": "#00C221",
        "elevation": 1,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 0.5,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 0.75,
        "zIndex": 99,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "overflow": "hidden",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
      <View
        onLayout={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "position": "absolute",
              "right": 5,
              "top": 4,
            }
          }
        >
          <View
            accessibilityComponentType="button"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessibilityTraits="button"
            accessible={true}
            centered={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "margin": 6,
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 15,
                      "height": 30,
                      "width": 30,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              <View>
                <Text
                  accessibilityElementsHidden={true}
                  allowFontScaling={false}
                  importantForAccessibility="no-hide-descendants"
                  pointerEvents="none"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontSize": 20,
                      },
                      Array [
                        Object {
                          "transform": Array [
                            Object {
                              "scaleX": 1,
                            },
                          ],
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                      ],
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  ï…–
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 0,
              "marginLeft": 16,
              "marginRight": 56,
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "margin": 8,
              }
            }
          >
            <Text
              accessibilityElementsHidden={true}
              allowFontScaling={false}
              importantForAccessibility="no-hide-descendants"
              pointerEvents="none"
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontSize": 20,
                  },
                  Array [
                    Object {
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ],
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              ï„³
            </Text>
          </View>
          <View
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                    "writingDirection": "ltr",
                  },
                  Array [
                    Object {
                      "flex": 1,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "margin": 8,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ],
                ]
              }
            >
              Validation request submitted
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "margin": 4,
            }
          }
        />
      </View>
    </View>
  </View>,
  <RCTScrollView>
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          style={
            Object {
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "marginBottom": 10,
                "padding": 10,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 15,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "flexDirection": "row",
                      "marginBottom": 8,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "marginRight": 3,
                      }
                    }
                  >
                    Record Type
                  </Text>
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                    testID="ios_touchable_wrapper"
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={false}
                      rejectResponderTermination={true}
                      style={
                        Array [
                          Object {
                            "borderColor": "#bdbdbd",
                            "borderRadius": 4,
                            "borderWidth": 1,
                            "color": "black",
                            "fontSize": 16,
                            "padding": 11,
                            "paddingRight": 30,
                            "width": "100%",
                          },
                          Object {
                            "color": "#C7C7CD",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="Choose a Record Type"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "position": "absolute",
                            "right": 0,
                          },
                          Object {
                            "right": 12,
                            "top": 10,
                          },
                        ]
                      }
                      testID="icon_container"
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "black",
                              "fontSize": 24,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        ï…€
                      </Text>
                    </View>
                  </View>
                  <Modal
                    hardwareAccelerated={false}
                    onDismiss={[Function]}
                    onOrientationChange={[Function]}
                    supportedOrientations={
                      Array [
                        "portrait",
                        "landscape",
                      ]
                    }
                    testID="ios_modal"
                    transparent={true}
                    visible={false}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                      testID="ios_modal_top"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#EFF1F2",
                            "borderTopColor": "#919498",
                            "borderTopWidth": 0.5,
                            "flexDirection": "row",
                            "height": 44,
                            "justifyContent": "space-between",
                            "paddingHorizontal": 10,
                            "zIndex": 2,
                          },
                          undefined,
                        ]
                      }
                      testID="input_accessory_view"
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 11,
                                  "transform": Array [
                                    Object {
                                      "translateY": 4,
                                    },
                                    Object {
                                      "rotate": "-45deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 22,
                                  "transform": Array [
                                    Object {
                                      "translateY": -5,
                                    },
                                    Object {
                                      "rotate": "135deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 4,
                            "left": 4,
                            "right": 4,
                            "top": 4,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        testID="done_button"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#007AFE",
                                "fontSize": 15,
                                "fontWeight": "bold",
                                "paddingRight": 2,
                                "paddingTop": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          Done
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#D0D4DB",
                            "justifyContent": "center",
                          },
                          Object {
                            "height": 215,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View>
                        <RCTPicker
                          items={
                            Array [
                              Object {
                                "label": "Choose a Record Type",
                                "textColor": undefined,
                                "value": null,
                              },
                            ]
                          }
                          onChange={[Function]}
                          selectedIndex={0}
                          style={
                            Array [
                              Object {
                                "height": 216,
                              },
                              undefined,
                            ]
                          }
                          testID="ios_picker"
                        />
                      </View>
                    </View>
                  </Modal>
                </View>
              </View>
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              />
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>,
]
`;

exports[`OneKeyValidationRequest should call handleSubmit as component method with response.ok false 1`] = `
Array [
  <View
    style={
      Object {
        "backgroundColor": "#E20000",
        "elevation": 1,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 0.5,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 0.75,
        "zIndex": 99,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "overflow": "hidden",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
      <View
        onLayout={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "position": "absolute",
              "right": 5,
              "top": 4,
            }
          }
        >
          <View
            accessibilityComponentType="button"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessibilityTraits="button"
            accessible={true}
            centered={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "margin": 6,
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 15,
                      "height": 30,
                      "width": 30,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              <View>
                <Text
                  accessibilityElementsHidden={true}
                  allowFontScaling={false}
                  importantForAccessibility="no-hide-descendants"
                  pointerEvents="none"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontSize": 20,
                      },
                      Array [
                        Object {
                          "transform": Array [
                            Object {
                              "scaleX": 1,
                            },
                          ],
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                      ],
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  ï…–
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 0,
              "marginLeft": 16,
              "marginRight": 56,
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "margin": 8,
              }
            }
          >
            <Text
              accessibilityElementsHidden={true}
              allowFontScaling={false}
              importantForAccessibility="no-hide-descendants"
              pointerEvents="none"
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontSize": 20,
                  },
                  Array [
                    Object {
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ],
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              ï€¨
            </Text>
          </View>
          <View
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                    "writingDirection": "ltr",
                  },
                  Array [
                    Object {
                      "flex": 1,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "margin": 8,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ],
                ]
              }
            >
              Something went wrong
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "margin": 4,
            }
          }
        />
      </View>
    </View>
  </View>,
  <RCTScrollView>
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          style={
            Object {
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "marginBottom": 10,
                "padding": 10,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 15,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "flexDirection": "row",
                      "marginBottom": 8,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "marginRight": 3,
                      }
                    }
                  >
                    Record Type
                  </Text>
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                    testID="ios_touchable_wrapper"
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={false}
                      rejectResponderTermination={true}
                      style={
                        Array [
                          Object {
                            "borderColor": "#bdbdbd",
                            "borderRadius": 4,
                            "borderWidth": 1,
                            "color": "black",
                            "fontSize": 16,
                            "padding": 11,
                            "paddingRight": 30,
                            "width": "100%",
                          },
                          Object {
                            "color": "#C7C7CD",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="Choose a Record Type"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "position": "absolute",
                            "right": 0,
                          },
                          Object {
                            "right": 12,
                            "top": 10,
                          },
                        ]
                      }
                      testID="icon_container"
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "black",
                              "fontSize": 24,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        ï…€
                      </Text>
                    </View>
                  </View>
                  <Modal
                    hardwareAccelerated={false}
                    onDismiss={[Function]}
                    onOrientationChange={[Function]}
                    supportedOrientations={
                      Array [
                        "portrait",
                        "landscape",
                      ]
                    }
                    testID="ios_modal"
                    transparent={true}
                    visible={false}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                      testID="ios_modal_top"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#EFF1F2",
                            "borderTopColor": "#919498",
                            "borderTopWidth": 0.5,
                            "flexDirection": "row",
                            "height": 44,
                            "justifyContent": "space-between",
                            "paddingHorizontal": 10,
                            "zIndex": 2,
                          },
                          undefined,
                        ]
                      }
                      testID="input_accessory_view"
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 11,
                                  "transform": Array [
                                    Object {
                                      "translateY": 4,
                                    },
                                    Object {
                                      "rotate": "-45deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 22,
                                  "transform": Array [
                                    Object {
                                      "translateY": -5,
                                    },
                                    Object {
                                      "rotate": "135deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 4,
                            "left": 4,
                            "right": 4,
                            "top": 4,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        testID="done_button"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#007AFE",
                                "fontSize": 15,
                                "fontWeight": "bold",
                                "paddingRight": 2,
                                "paddingTop": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          Done
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#D0D4DB",
                            "justifyContent": "center",
                          },
                          Object {
                            "height": 215,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View>
                        <RCTPicker
                          items={
                            Array [
                              Object {
                                "label": "Choose a Record Type",
                                "textColor": undefined,
                                "value": null,
                              },
                            ]
                          }
                          onChange={[Function]}
                          selectedIndex={0}
                          style={
                            Array [
                              Object {
                                "height": 216,
                              },
                              undefined,
                            ]
                          }
                          testID="ios_picker"
                        />
                      </View>
                    </View>
                  </Modal>
                </View>
              </View>
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              />
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              />
            </View>
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>,
]
`;

exports[`OneKeyValidationRequest should render OneKeyValidationRequest component with showRequestErrorMessage 1`] = `
Array [
  <View
    style={
      Object {
        "backgroundColor": "#E20000",
        "elevation": 1,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 0.5,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 0.75,
        "zIndex": 99,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "overflow": "hidden",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
      <View
        onLayout={[Function]}
        style={Object {}}
      >
        <View
          style={
            Object {
              "position": "absolute",
              "right": 5,
              "top": 4,
            }
          }
        >
          <View
            accessibilityComponentType="button"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessibilityTraits="button"
            accessible={true}
            centered={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            style={Object {}}
          >
            <View
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "margin": 6,
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 15,
                      "height": 30,
                      "width": 30,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              <View>
                <Text
                  accessibilityElementsHidden={true}
                  allowFontScaling={false}
                  importantForAccessibility="no-hide-descendants"
                  pointerEvents="none"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontSize": 20,
                      },
                      Array [
                        Object {
                          "transform": Array [
                            Object {
                              "scaleX": 1,
                            },
                          ],
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                      ],
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  ï…–
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 0,
              "marginLeft": 16,
              "marginRight": 56,
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "margin": 8,
              }
            }
          >
            <Text
              accessibilityElementsHidden={true}
              allowFontScaling={false}
              importantForAccessibility="no-hide-descendants"
              pointerEvents="none"
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontSize": 20,
                  },
                  Array [
                    Object {
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ],
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              ï€¨
            </Text>
          </View>
          <View
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                    "writingDirection": "ltr",
                  },
                  Array [
                    Object {
                      "flex": 1,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "margin": 8,
                    },
                    Object {
                      "color": "#ffffff",
                    },
                  ],
                ]
              }
            >
              Something went wrong
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "margin": 4,
            }
          }
        />
      </View>
    </View>
  </View>,
  <RCTScrollView>
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          style={
            Object {
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "marginBottom": 10,
                "padding": 10,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 15,
                }
              }
            >
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "flexDirection": "row",
                      "marginBottom": 8,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "marginRight": 3,
                      }
                    }
                  >
                    Record Type
                  </Text>
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                    testID="ios_touchable_wrapper"
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={false}
                      rejectResponderTermination={true}
                      style={
                        Array [
                          Object {
                            "borderColor": "#bdbdbd",
                            "borderRadius": 4,
                            "borderWidth": 1,
                            "color": "black",
                            "fontSize": 16,
                            "padding": 11,
                            "paddingRight": 30,
                            "width": "100%",
                          },
                          Object {
                            "color": "#C7C7CD",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="Choose a Record Type"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "position": "absolute",
                            "right": 0,
                          },
                          Object {
                            "right": 12,
                            "top": 10,
                          },
                        ]
                      }
                      testID="icon_container"
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "black",
                              "fontSize": 24,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        ï…€
                      </Text>
                    </View>
                  </View>
                  <Modal
                    hardwareAccelerated={false}
                    onDismiss={[Function]}
                    onOrientationChange={[Function]}
                    supportedOrientations={
                      Array [
                        "portrait",
                        "landscape",
                      ]
                    }
                    testID="ios_modal"
                    transparent={true}
                    visible={false}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                      testID="ios_modal_top"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#EFF1F2",
                            "borderTopColor": "#919498",
                            "borderTopWidth": 0.5,
                            "flexDirection": "row",
                            "height": 44,
                            "justifyContent": "space-between",
                            "paddingHorizontal": 10,
                            "zIndex": 2,
                          },
                          undefined,
                        ]
                      }
                      testID="input_accessory_view"
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 11,
                                  "transform": Array [
                                    Object {
                                      "translateY": 4,
                                    },
                                    Object {
                                      "rotate": "-45deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 22,
                                  "transform": Array [
                                    Object {
                                      "translateY": -5,
                                    },
                                    Object {
                                      "rotate": "135deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 4,
                            "left": 4,
                            "right": 4,
                            "top": 4,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        testID="done_button"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#007AFE",
                                "fontSize": 15,
                                "fontWeight": "bold",
                                "paddingRight": 2,
                                "paddingTop": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          Done
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#D0D4DB",
                            "justifyContent": "center",
                          },
                          Object {
                            "height": 215,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View>
                        <RCTPicker
                          items={
                            Array [
                              Object {
                                "label": "Choose a Record Type",
                                "textColor": undefined,
                                "value": null,
                              },
                            ]
                          }
                          onChange={[Function]}
                          selectedIndex={0}
                          style={
                            Array [
                              Object {
                                "height": 216,
                              },
                              undefined,
                            ]
                          }
                          testID="ios_picker"
                        />
                      </View>
                    </View>
                  </Modal>
                </View>
              </View>
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              />
              <View
                style={
                  Object {
                    "width": "30%",
                  }
                }
              />
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignContent": "center",
              "backgroundColor": "rgba(255,255,255,0.7)",
              "flexDirection": "row",
              "height": "100%",
              "justifyContent": "center",
              "position": "absolute",
              "width": "100%",
              "zIndex": 100,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "height": 24,
                  "opacity": 1,
                  "width": 24,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 24,
                      "transform": Array [
                        Object {
                          "rotate": "45deg",
                        },
                      ],
                      "width": 24,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 12,
                        "overflow": "hidden",
                        "width": 24,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "height": 24,
                          "transform": Array [
                            Object {
                              "translateY": 0,
                            },
                            Object {
                              "rotate": "-165deg",
                            },
                          ],
                          "width": 24,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 12,
                            "overflow": "hidden",
                            "width": 24,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "borderColor": "#0768FD",
                              "borderRadius": 12,
                              "borderWidth": 2.4,
                              "height": 24,
                              "width": 24,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 24,
                      "transform": Array [
                        Object {
                          "rotate": "45deg",
                        },
                      ],
                      "width": 24,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 12,
                        "overflow": "hidden",
                        "top": 12,
                        "width": 24,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "height": 24,
                          "transform": Array [
                            Object {
                              "translateY": -12,
                            },
                            Object {
                              "rotate": "345deg",
                            },
                          ],
                          "width": 24,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 12,
                            "overflow": "hidden",
                            "width": 24,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "borderColor": "#0768FD",
                              "borderRadius": 12,
                              "borderWidth": 2.4,
                              "height": 24,
                              "width": 24,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <Text
            style={
              Object {
                "color": "#7c7f81",
                "fontSize": 15,
                "paddingTop": 20,
                "position": "absolute",
                "top": "50%",
              }
            }
          >
            Fetching countries...
          </Text>
        </View>
      </RCTSafeAreaView>
    </View>
  </RCTScrollView>,
]
`;

exports[`OneKeyValidationRequest should render OneKeyValidationRequest component with workplace entityType 1`] = `
<RCTScrollView>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
    >
      <View
        style={
          Object {
            "padding": 10,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "flexDirection": "row",
                    "marginBottom": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "marginRight": 3,
                    }
                  }
                >
                  Record Type
                </Text>
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Choose a Record Type"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Choose a Record Type",
                              "textColor": undefined,
                              "value": null,
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "marginBottom": 8,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "marginRight": 3,
                      }
                    }
                  >
                    Country
                  </Text>
                  <Text
                    style={
                      Object {
                        "color": undefined,
                      }
                    }
                  >
                    *
                  </Text>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                    testID="ios_touchable_wrapper"
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={false}
                      rejectResponderTermination={true}
                      style={
                        Array [
                          Object {
                            "borderColor": "#bdbdbd",
                            "borderRadius": 4,
                            "borderWidth": 1,
                            "color": "black",
                            "fontSize": 16,
                            "padding": 11,
                            "paddingRight": 30,
                            "width": "100%",
                          },
                          Object {
                            "color": "#C7C7CD",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="Choose a Country"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "position": "absolute",
                            "right": 0,
                          },
                          Object {
                            "right": 12,
                            "top": 10,
                          },
                        ]
                      }
                      testID="icon_container"
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "black",
                              "fontSize": 24,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        ï…€
                      </Text>
                    </View>
                  </View>
                  <Modal
                    hardwareAccelerated={false}
                    onDismiss={[Function]}
                    onOrientationChange={[Function]}
                    supportedOrientations={
                      Array [
                        "portrait",
                        "landscape",
                      ]
                    }
                    testID="ios_modal"
                    transparent={true}
                    visible={false}
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                        }
                      }
                      testID="ios_modal_top"
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#EFF1F2",
                            "borderTopColor": "#919498",
                            "borderTopWidth": 0.5,
                            "flexDirection": "row",
                            "height": 44,
                            "justifyContent": "space-between",
                            "paddingHorizontal": 10,
                            "zIndex": 2,
                          },
                          undefined,
                        ]
                      }
                      testID="input_accessory_view"
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "flexDirection": "row",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 11,
                                  "transform": Array [
                                    Object {
                                      "translateY": 4,
                                    },
                                    Object {
                                      "rotate": "-45deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#D0D4DB",
                                  "borderRightWidth": 1.5,
                                  "borderTopWidth": 1.5,
                                  "height": 15,
                                  "width": 15,
                                },
                                undefined,
                                Object {
                                  "marginLeft": 22,
                                  "transform": Array [
                                    Object {
                                      "translateY": -5,
                                    },
                                    Object {
                                      "rotate": "135deg",
                                    },
                                  ],
                                },
                                undefined,
                                Object {},
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 4,
                            "left": 4,
                            "right": 4,
                            "top": 4,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        testID="done_button"
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#007AFE",
                                "fontSize": 15,
                                "fontWeight": "bold",
                                "paddingRight": 2,
                                "paddingTop": 1,
                              },
                              undefined,
                            ]
                          }
                        >
                          Done
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#D0D4DB",
                            "justifyContent": "center",
                          },
                          Object {
                            "height": 215,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View>
                        <RCTPicker
                          items={
                            Array [
                              Object {
                                "label": "Choose a Country",
                                "textColor": undefined,
                                "value": "",
                              },
                            ]
                          }
                          onChange={[Function]}
                          selectedIndex={0}
                          style={
                            Array [
                              Object {
                                "height": 216,
                              },
                              undefined,
                            ]
                          }
                          testID="ios_picker"
                        />
                      </View>
                    </View>
                  </Modal>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#f4f6f9",
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#7c7f81",
              }
            }
          >
            Workplace
          </Text>
        </View>
        <View
          style={
            Object {
              "marginBottom": 10,
              "padding": 10,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Name
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="workplace.usualName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Organization Name
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="workplace.parentUsualName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value=""
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Telephone No
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="workplace.telephone"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="0000000000"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Workplace Type
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": "",
                            },
                            Object {
                              "label": "",
                              "textColor": undefined,
                              "value": "",
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={1}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Category
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  testID="ios_touchable_wrapper"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    rejectResponderTermination={true}
                    style={
                      Array [
                        Object {
                          "borderColor": "#bdbdbd",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "color": "black",
                          "fontSize": 16,
                          "padding": 11,
                          "paddingRight": 30,
                          "width": "100%",
                        },
                        Object {
                          "color": "#C7C7CD",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="--None--"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                          "right": 0,
                        },
                        Object {
                          "right": 12,
                          "top": 10,
                        },
                      ]
                    }
                    testID="icon_container"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "black",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ï…€
                    </Text>
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onOrientationChange={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="ios_modal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                    testID="ios_modal_top"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "paddingHorizontal": 10,
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="input_accessory_view"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flexDirection": "row",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 11,
                                "transform": Array [
                                  Object {
                                    "translateY": 4,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "marginLeft": 22,
                                "transform": Array [
                                  Object {
                                    "translateY": -5,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      hitSlop={
                        Object {
                          "bottom": 4,
                          "left": 4,
                          "right": 4,
                          "top": 4,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 15,
                              "fontWeight": "bold",
                              "paddingRight": 2,
                              "paddingTop": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 215,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "--None--",
                              "textColor": undefined,
                              "value": "",
                            },
                            Object {
                              "label": "",
                              "textColor": undefined,
                              "value": "",
                            },
                          ]
                        }
                        onChange={[Function]}
                        selectedIndex={1}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                        testID="ios_picker"
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Address Line 1
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="address.longLabel"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  City
                  <Text
                    style={
                      Object {
                        "color": "#E20000",
                      }
                    }
                  >
                     *
                  </Text>
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="address.city"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  Postal Code
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="address.longPostalCode"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value="TEST"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": "30%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Array [
                    Object {
                      "width": "100%",
                    },
                    undefined,
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  County
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "borderColor": "#D9D9D9",
                        "borderRadius": 4,
                        "borderWidth": 1,
                      },
                      Object {},
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 40,
                        "minHeight": 40,
                        "overflow": "hidden",
                        "paddingBottom": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <TextInput
                      allowFontScaling={true}
                      editable={true}
                      maxResizableWidth={750}
                      minHeight={60}
                      minWidth={0}
                      name="address.countyCode"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      paddingLeft={8}
                      paddingRight={8}
                      placeholderTextColor="rgba(0, 0, 0, 0.54)"
                      rejectResponderTermination={true}
                      selectionColor="#0768FD"
                      style={
                        Array [
                          Object {
                            "margin": 0,
                            "textAlign": "left",
                            "zIndex": 5,
                          },
                          Object {
                            "color": "#000000",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": undefined,
                            "height": 40,
                            "minHeight": 0,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingVertical": 5,
                            "textAlignVertical": "center",
                            "width": "100%",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      value=""
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#f4f6f9",
                "marginBottom": 10,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#7c7f81",
                }
              }
            >
              Other
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 15,
              }
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "width": "100%",
                  },
                  undefined,
                  Object {
                    "opacity": 1,
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                Request Comments
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "borderColor": "#D9D9D9",
                      "borderRadius": 4,
                      "borderWidth": 1,
                    },
                    Object {},
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "height": 80,
                      "minHeight": 80,
                      "overflow": "hidden",
                      "paddingBottom": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={true}
                    maxResizableWidth={750}
                    minHeight={60}
                    minWidth={0}
                    multiline={true}
                    name="workplace.requestComments"
                    numberOfLines={3}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    paddingLeft={8}
                    paddingRight={8}
                    placeholderTextColor="rgba(0, 0, 0, 0.54)"
                    rejectResponderTermination={true}
                    selectionColor="#0768FD"
                    style={
                      Array [
                        Object {
                          "margin": 0,
                          "textAlign": "left",
                          "zIndex": 5,
                        },
                        Object {
                          "color": "#000000",
                          "fontFamily": "System",
                          "fontSize": 16,
                          "fontWeight": undefined,
                          "height": 80,
                          "minHeight": 0,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingVertical": 5,
                          "textAlignVertical": "center",
                          "width": "100%",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value=""
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "margin": 25,
            }
          }
        >
          <View
            buttonColor="#039BE5"
            buttonType="outline"
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 4,
                "borderStyle": "solid",
                "elevation": 0,
                "minWidth": 64,
                "opacity": 0.5,
                "width": "auto",
              }
            }
          >
            <View
              accessibilityComponentType="button"
              accessibilityRole="button"
              accessibilityStates={
                Array [
                  "disabled",
                ]
              }
              accessibilityTraits={
                Array [
                  "button",
                  "disabled",
                ]
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onLayout={[Function]}
              onPressIn={[Function]}
              onPressOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
              style={Object {}}
            >
              <View
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "borderRadius": 4,
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontFamily": "System",
                          "fontWeight": "400",
                          "textAlign": "left",
                          "writingDirection": "ltr",
                        },
                        Array [
                          Object {
                            "letterSpacing": 1,
                            "textAlign": "center",
                          },
                          undefined,
                          false,
                          Object {
                            "color": "#0768FD",
                            "fontFamily": "System",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "marginHorizontal": 16,
                            "marginVertical": 9,
                          },
                          Object {
                            "fontFamily": "System",
                            "fontWeight": "500",
                          },
                          undefined,
                        ],
                      ]
                    }
                  >
                    Submit
                  </Text>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 0,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "backgroundColor": "rgba(255,255,255,0.7)",
            "flexDirection": "row",
            "height": "100%",
            "justifyContent": "center",
            "position": "absolute",
            "width": "100%",
            "zIndex": 100,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#7c7f81",
              "fontSize": 15,
              "paddingTop": 20,
              "position": "absolute",
              "top": "50%",
            }
          }
        >
          Fetching countries...
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;
