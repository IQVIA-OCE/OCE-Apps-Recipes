// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Activity Should render Activity component 1`] = `
Array [
  <View
    style={
      Object {
        "backgroundColor": "#f4f6f9",
        "marginBottom": 10,
        "padding": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#7c7f81",
        }
      }
    >
      Individual/Activity
    </Text>
  </View>,
  <View
    style={
      Object {
        "marginBottom": 10,
        "padding": 10,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 15,
          "zIndex": 100,
        }
      }
    />
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 15,
        }
      }
    >
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "width": "100%",
              },
              undefined,
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "marginBottom": 8,
              }
            }
          >
            First Name
          </Text>
          <View
            style={
              Array [
                Object {
                  "borderColor": "#D9D9D9",
                  "borderRadius": 4,
                  "borderWidth": 1,
                },
                Object {},
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "minHeight": 40,
                  "paddingBottom": 0,
                  "paddingTop": 0,
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                editable={true}
                maxResizableWidth={750}
                minHeight={60}
                minWidth={176}
                name="individual.firstName"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholderTextColor="rgba(0, 0, 0, 0.54)"
                rejectResponderTermination={true}
                selectionColor="#0768FD"
                style={
                  Array [
                    Object {
                      "elevation": 5,
                      "margin": 0,
                      "paddingLeft": 8,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 2,
                        "width": 0,
                      },
                      "shadowOpacity": 0.25,
                      "shadowRadius": 3.84,
                      "textAlign": "left",
                      "zIndex": 5,
                    },
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "height": "95%",
                      "paddingRight": 0,
                      "textAlignVertical": "center",
                      "width": "100%",
                    },
                  ]
                }
                underlineColorAndroid="transparent"
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "width": "100%",
              },
              undefined,
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "marginBottom": 8,
              }
            }
          >
            Middle Name
          </Text>
          <View
            style={
              Array [
                Object {
                  "borderColor": "#D9D9D9",
                  "borderRadius": 4,
                  "borderWidth": 1,
                },
                Object {},
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "minHeight": 40,
                  "paddingBottom": 0,
                  "paddingTop": 0,
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                editable={true}
                maxResizableWidth={750}
                minHeight={60}
                minWidth={176}
                name="individual.middleName"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholderTextColor="rgba(0, 0, 0, 0.54)"
                rejectResponderTermination={true}
                selectionColor="#0768FD"
                style={
                  Array [
                    Object {
                      "elevation": 5,
                      "margin": 0,
                      "paddingLeft": 8,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 2,
                        "width": 0,
                      },
                      "shadowOpacity": 0.25,
                      "shadowRadius": 3.84,
                      "textAlign": "left",
                      "zIndex": 5,
                    },
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "height": "95%",
                      "paddingRight": 0,
                      "textAlignVertical": "center",
                      "width": "100%",
                    },
                  ]
                }
                underlineColorAndroid="transparent"
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "width": "100%",
              },
              undefined,
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "marginBottom": 8,
              }
            }
          >
            Last Name
          </Text>
          <View
            style={
              Array [
                Object {
                  "borderColor": "#D9D9D9",
                  "borderRadius": 4,
                  "borderWidth": 1,
                },
                Object {},
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "minHeight": 40,
                  "paddingBottom": 0,
                  "paddingTop": 0,
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                editable={true}
                maxResizableWidth={750}
                minHeight={60}
                minWidth={176}
                name="individual.lastName"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholderTextColor="rgba(0, 0, 0, 0.54)"
                rejectResponderTermination={true}
                selectionColor="#0768FD"
                style={
                  Array [
                    Object {
                      "elevation": 5,
                      "margin": 0,
                      "paddingLeft": 8,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 2,
                        "width": 0,
                      },
                      "shadowOpacity": 0.25,
                      "shadowRadius": 3.84,
                      "textAlign": "left",
                      "zIndex": 5,
                    },
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "height": "95%",
                      "paddingRight": 0,
                      "textAlignVertical": "center",
                      "width": "100%",
                    },
                  ]
                }
                underlineColorAndroid="transparent"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 15,
        }
      }
    >
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          Courtesy Title
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderColor": "#bdbdbd",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "black",
                    "fontSize": 16,
                    "padding": 11,
                    "paddingRight": 30,
                    "width": "100%",
                  },
                  Object {
                    "color": "#C7C7CD",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="--None--"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "right": 12,
                    "top": 10,
                  },
                ]
              }
              testID="icon_container"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "black",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onDismiss={[Function]}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "--None--",
                        "textColor": undefined,
                        "value": null,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          Individual Title
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderColor": "#bdbdbd",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "black",
                    "fontSize": 16,
                    "padding": 11,
                    "paddingRight": 30,
                    "width": "100%",
                  },
                  Object {
                    "color": "#C7C7CD",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="--None--"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "right": 12,
                    "top": 10,
                  },
                ]
              }
              testID="icon_container"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "black",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onDismiss={[Function]}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "--None--",
                        "textColor": undefined,
                        "value": null,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          Gender
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderColor": "#bdbdbd",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "black",
                    "fontSize": 16,
                    "padding": 11,
                    "paddingRight": 30,
                    "width": "100%",
                  },
                  Object {
                    "color": "#C7C7CD",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="--None--"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "right": 12,
                    "top": 10,
                  },
                ]
              }
              testID="icon_container"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "black",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onDismiss={[Function]}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "--None--",
                        "textColor": undefined,
                        "value": null,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 15,
        }
      }
    >
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          Professional Type
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderColor": "#bdbdbd",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "black",
                    "fontSize": 16,
                    "padding": 11,
                    "paddingRight": 30,
                    "width": "100%",
                  },
                  Object {
                    "color": "#C7C7CD",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="--None--"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "right": 12,
                    "top": 10,
                  },
                ]
              }
              testID="icon_container"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "black",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onDismiss={[Function]}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "--None--",
                        "textColor": undefined,
                        "value": null,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          Role
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderColor": "#bdbdbd",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "black",
                    "fontSize": 16,
                    "padding": 11,
                    "paddingRight": 30,
                    "width": "100%",
                  },
                  Object {
                    "color": "#C7C7CD",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="--None--"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "right": 12,
                    "top": 10,
                  },
                ]
              }
              testID="icon_container"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "black",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onDismiss={[Function]}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "--None--",
                        "textColor": undefined,
                        "value": null,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          Primary Specialty
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderColor": "#bdbdbd",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "black",
                    "fontSize": 16,
                    "padding": 11,
                    "paddingRight": 30,
                    "width": "100%",
                  },
                  Object {
                    "color": "#C7C7CD",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="--None--"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "right": 12,
                    "top": 10,
                  },
                ]
              }
              testID="icon_container"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "black",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onDismiss={[Function]}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "--None--",
                        "textColor": undefined,
                        "value": null,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 15,
        }
      }
    >
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          Specialty 2
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderColor": "#bdbdbd",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "black",
                    "fontSize": 16,
                    "padding": 11,
                    "paddingRight": 30,
                    "width": "100%",
                  },
                  Object {
                    "color": "#C7C7CD",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="--None--"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "right": 12,
                    "top": 10,
                  },
                ]
              }
              testID="icon_container"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "black",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onDismiss={[Function]}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "--None--",
                        "textColor": undefined,
                        "value": null,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 8,
            }
          }
        >
          Specialty 3
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "stretch",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            testID="ios_touchable_wrapper"
          >
            <TextInput
              allowFontScaling={true}
              editable={false}
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderColor": "#bdbdbd",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "black",
                    "fontSize": 16,
                    "padding": 11,
                    "paddingRight": 30,
                    "width": "100%",
                  },
                  Object {
                    "color": "#C7C7CD",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="--None--"
            />
            <View
              style={
                Array [
                  Object {
                    "position": "absolute",
                    "right": 0,
                  },
                  Object {
                    "right": 12,
                    "top": 10,
                  },
                ]
              }
              testID="icon_container"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "black",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            onDismiss={[Function]}
            onOrientationChange={[Function]}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            testID="ios_modal"
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "opacity": 1,
                }
              }
              testID="ios_modal_top"
            />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EFF1F2",
                    "borderTopColor": "#919498",
                    "borderTopWidth": 0.5,
                    "flexDirection": "row",
                    "height": 44,
                    "justifyContent": "space-between",
                    "paddingHorizontal": 10,
                    "zIndex": 2,
                  },
                  undefined,
                ]
              }
              testID="input_accessory_view"
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 11,
                          "transform": Array [
                            Object {
                              "translateY": 4,
                            },
                            Object {
                              "rotate": "-45deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderColor": "#D0D4DB",
                          "borderRightWidth": 1.5,
                          "borderTopWidth": 1.5,
                          "height": 15,
                          "width": 15,
                        },
                        undefined,
                        Object {
                          "marginLeft": 22,
                          "transform": Array [
                            Object {
                              "translateY": -5,
                            },
                            Object {
                              "rotate": "135deg",
                            },
                          ],
                        },
                        undefined,
                        Object {},
                      ]
                    }
                  />
                </View>
              </View>
              <View
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 4,
                    "left": 4,
                    "right": 4,
                    "top": 4,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="done_button"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#007AFE",
                        "fontSize": 15,
                        "fontWeight": "bold",
                        "paddingRight": 2,
                        "paddingTop": 1,
                      },
                      undefined,
                    ]
                  }
                >
                  Done
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#D0D4DB",
                    "justifyContent": "center",
                  },
                  Object {
                    "height": 215,
                  },
                  undefined,
                ]
              }
            >
              <View>
                <RCTPicker
                  items={
                    Array [
                      Object {
                        "label": "--None--",
                        "textColor": undefined,
                        "value": null,
                      },
                    ]
                  }
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  selectedIndex={0}
                  style={
                    Array [
                      Object {
                        "height": 216,
                      },
                      undefined,
                    ]
                  }
                  testID="ios_picker"
                />
              </View>
            </View>
          </Modal>
        </View>
      </View>
      <View
        style={
          Object {
            "width": "30%",
          }
        }
      />
    </View>
  </View>,
]
`;
