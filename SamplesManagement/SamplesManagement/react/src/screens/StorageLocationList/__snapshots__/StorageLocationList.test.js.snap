// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StorageLocationList should render and trigger actions 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={false}
    nativeID="animatedComponent"
    style={
      Object {
        "backgroundColor": "#ffffff",
        "elevation": 1,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 0.5,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 0.75,
        "zIndex": 99,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "overflow": "hidden",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "height": 0,
          }
        }
      />
      <View
        collapsable={false}
        nativeID="animatedComponent"
        onLayout={[Function]}
        style={
          Object {
            "opacity": 0,
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "translateY": -0,
              },
            ],
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 0,
              "marginLeft": 16,
              "marginRight": 56,
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                    "writingDirection": "ltr",
                  },
                  Array [
                    Object {
                      "flex": 1,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "margin": 8,
                    },
                    Object {
                      "color": "#000000",
                    },
                  ],
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "margin": 4,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#F6F6F6",
        "borderColor": "#DADADA",
        "borderWidth": 1,
        "flexDirection": "row",
        "padding": 12,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 3,
            "height": 35,
            "marginRight": 10,
            "width": 35,
          },
          Object {
            "backgroundColor": "#AEAEAE",
          },
        ]
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#fff",
              "fontSize": 32,
            },
            undefined,
            Object {
              "fontFamily": "Material Design Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        Ôçé
      </Text>
    </View>
    <View
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#262626",
            "fontSize": 12,
            "letterSpacing": 2,
          }
        }
      >
        SAMPLES MANAGEMENT
      </Text>
      <Text
        style={
          Object {
            "fontSize": 17,
            "fontWeight": "bold",
          }
        }
      >
        Samples Management Addresses
      </Text>
    </View>
    <View />
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "paddingTop": 4,
        }
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "backgroundColor": "#ffffff",
            "borderColor": "#d9d9d9",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "elevation": 0,
            "marginLeft": 7,
            "minWidth": 64,
            "opacity": 1,
            "width": "auto",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onLayout={[Function]}
          onPressIn={[Function]}
          onPressOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          style={Object {}}
        >
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Array [
                  Object {
                    "borderRadius": 4,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                      "textAlign": "left",
                      "writingDirection": "ltr",
                    },
                    Array [
                      Object {
                        "letterSpacing": 1,
                        "textAlign": "center",
                      },
                      undefined,
                      false,
                      Object {
                        "color": "#0768FD",
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "marginHorizontal": 16,
                        "marginVertical": 6,
                      },
                      Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Back
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "borderRadius": 0,
                },
              ]
            }
          />
        </View>
      </View>
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "backgroundColor": "#0768FD",
            "borderRadius": 4,
            "borderStyle": "solid",
            "elevation": 2,
            "marginLeft": 7,
            "minWidth": 64,
            "opacity": 1,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 0.75,
              "width": 0,
            },
            "shadowOpacity": 0.24,
            "shadowRadius": 1.5,
            "width": "auto",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onLayout={[Function]}
          onPressIn={[Function]}
          onPressOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          style={Object {}}
        >
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Array [
                  Object {
                    "borderRadius": 4,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                      "textAlign": "left",
                      "writingDirection": "ltr",
                    },
                    Array [
                      Object {
                        "letterSpacing": 1,
                        "textAlign": "center",
                      },
                      undefined,
                      false,
                      Object {
                        "color": "#ffffff",
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "marginHorizontal": 16,
                        "marginVertical": 6,
                      },
                      Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                New
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "borderRadius": 0,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListHeaderComponent={[Function]}
    data={
      Array [
        Object {
          "address": "address 1",
          "id": "1",
          "isDefault": false,
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={
          [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        refreshing={false}
      />
    }
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "backgroundColor": "#F6F6F6",
              "borderBottomWidth": 1,
              "borderColor": "#DADADA",
              "flexDirection": "row",
              "paddingHorizontal": 10,
              "paddingVertical": 5,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontWeight": "bold",
                }
              }
            >
              ADDRESS
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontWeight": "bold",
                }
              }
            >
              DEFAULT STORAGE LOCATION
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "borderBottomWidth": 1,
              "borderColor": "#DADADA",
              "flexDirection": "row",
              "paddingHorizontal": 10,
              "paddingVertical": 5,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Text>
              address 1
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityLiveRegion="polite"
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                status="unchecked"
                style={Object {}}
                value="1"
              >
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "borderRadius": 18,
                          "paddingHorizontal": 6,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View>
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      style={
                        Array [
                          Object {
                            "color": "rgba(0, 0, 0, 0.26)",
                            "fontSize": 20,
                          },
                          Array [
                            Object {
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ÔêΩ
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                centered={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "margin": 6,
                          "overflow": "hidden",
                        },
                        Object {
                          "borderRadius": 18,
                          "height": 36,
                          "width": 36,
                        },
                        undefined,
                        undefined,
                      ],
                    ]
                  }
                >
                  <View>
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      style={
                        Array [
                          Object {
                            "color": "#E62626",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      ÔáÄ
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                centered={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "margin": 6,
                          "overflow": "hidden",
                        },
                        Object {
                          "borderRadius": 18,
                          "height": 36,
                          "width": 36,
                        },
                        undefined,
                        undefined,
                      ],
                    ]
                  }
                >
                  <View>
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      style={
                        Array [
                          Object {
                            "color": "#0768FD",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      Ôè´
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`StorageLocationList should render error 1`] = `
<View>
  <Text>
    error
  </Text>
</View>
`;
