// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountsScreen should render properly 1`] = `
<View
  style={
    Object {
      "minHeight": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "padding": 4,
        "zIndex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": undefined,
            "borderColor": "#d9d9d9",
            "borderRadius": 4,
            "borderWidth": 1,
            "elevation": 0,
          },
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Object {
            "width": "70%",
          },
        ]
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessibilityTraits="button"
        accessible={true}
        centered={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
      >
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "margin": 6,
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 18,
                  "height": 36,
                  "width": 36,
                },
                undefined,
                Array [
                  Object {
                    "margin": 0,
                  },
                ],
              ],
            ]
          }
        >
          <View>
            <Text
              accessibilityElementsHidden={true}
              allowFontScaling={false}
              importantForAccessibility="no-hide-descendants"
              pointerEvents="none"
              style={
                Array [
                  Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ],
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
      <TextInput
        accessibilityRole="search"
        accessibilityTraits="search"
        allowFontScaling={true}
        editable={true}
        keyboardAppearance="light"
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="Search"
        placeholderTextColor="rgba(0, 0, 0, 0.54)"
        rejectResponderTermination={true}
        returnKeyType="search"
        selectionColor="#0768FD"
        style={
          Array [
            Object {
              "alignSelf": "stretch",
              "flex": 1,
              "fontSize": 18,
              "minWidth": 0,
              "textAlign": "left",
            },
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            undefined,
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        accessibilityComponentType="button"
        accessibilityRole="button"
        accessibilityStates={
          Array [
            "disabled",
          ]
        }
        accessibilityTraits="button"
        accessible={true}
        centered={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
      >
        <View
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "margin": 6,
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 18,
                  "height": 36,
                  "width": 36,
                },
                Object {
                  "opacity": 0.32,
                },
                undefined,
              ],
            ]
          }
        >
          <View>
            <Text
              accessibilityElementsHidden={true}
              allowFontScaling={false}
              importantForAccessibility="no-hide-descendants"
              pointerEvents="none"
              style={
                Array [
                  Object {
                    "color": "rgba(255, 255, 255, 0)",
                    "fontSize": 24,
                  },
                  Array [
                    Object {
                      "transform": Array [
                        Object {
                          "scaleX": 1,
                        },
                      ],
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ],
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "paddingHorizontal": 21,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#2bb3fe",
            "fontSize": 16,
          }
        }
      >
        Sort By: 
        Sample eligibility
      </Text>
    </View>
    <View
      collapsable={false}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
      />
    </View>
    <View
      accessibilityComponentType="button"
      accessibilityRole="button"
      accessibilityStates={Array []}
      accessibilityTraits="button"
      accessible={true}
      centered={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "margin": 6,
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 15,
                "height": 30,
                "width": 30,
              },
              undefined,
              undefined,
            ],
          ]
        }
      >
        <View>
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            style={
              Array [
                Object {
                  "color": "#2bb3fe",
                  "fontSize": 20,
                },
                Array [
                  Object {
                    "transform": Array [
                      Object {
                        "scaleX": 1,
                      },
                    ],
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "borderRadius": 0,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTScrollView
    ListFooterComponent={[Function]}
    data={Array []}
    disableVirtualization={false}
    extraData={
      Object {
        "columns": Array [
          Object {
            "accessor": "OCE__Account__r.OCE__PrimaryAccountAddress__r.OCE__SampleEligibilityStatus__c",
            "id": "SampleEligibility",
            "isSortable": true,
            "title": "Sample eligibility",
          },
          Object {
            "accessor": "OCE__Account__r.OCE__PrimaryAccountAddress__r.OCE__BestTime__c",
            "id": "NextBestTime",
            "isSortable": false,
            "title": "Next best time",
          },
          Object {
            "accessor": "OCE__Rank__c",
            "id": "Rank",
            "isSortable": true,
            "title": "Rank",
            "type": "number",
          },
        ],
        "dataSource": Array [],
        "error": null,
        "fetchDone": false,
        "filterQuery": "",
        "limit": 20,
        "loading": true,
        "offset": 0,
        "sortColumn": Object {
          "accessor": "OCE__Account__r.OCE__PrimaryAccountAddress__r.OCE__SampleEligibilityStatus__c",
          "id": "SampleEligibility",
          "isSortable": true,
          "title": "Sample eligibility",
        },
        "sortDirection": "asc",
        "sortOptionsMenuCoord": Object {
          "x": 0,
          "y": 0,
        },
        "sortOptionsVisible": false,
        "sortingColumns": Array [
          Object {
            "accessor": "OCE__Account__r.OCE__PrimaryAccountAddress__r.OCE__SampleEligibilityStatus__c",
            "id": "SampleEligibility",
            "isSortable": true,
            "title": "Sample eligibility",
          },
          Object {
            "accessor": "OCE__Rank__c",
            "id": "Rank",
            "isSortable": true,
            "title": "Rank",
            "type": "number",
          },
          Object {
            "accessor": "OCE__Account__r.LastName",
            "id": "Last Name",
            "title": "LastName",
          },
        ],
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.5}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#f2f2f2",
        "paddingTop": 5,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              Object {
                "minHeight": 80,
                "paddingVertical": 10,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "height": 24,
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 24,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 24,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 12,
                      "overflow": "hidden",
                      "top": 12,
                      "width": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 24,
                        "transform": Array [
                          Object {
                            "translateY": -12,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 24,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 12,
                          "overflow": "hidden",
                          "width": 24,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#0768FD",
                            "borderRadius": 12,
                            "borderWidth": 2.4,
                            "height": 24,
                            "width": 24,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
